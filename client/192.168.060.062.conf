# Name the components on this agent
a1.sources = rxcache1
a1.sinks = kcol1 kcol2
a1.channels = clocal


a1.sinkgroups = g1
a1.sinkgroups.g1.sinks = kcol1 kcol2
a1.sinkgroups.g1.processor.type = load_balance
a1.sinkgroups.g1.processor.backoff = true
a1.sinkgroups.g1.processor.selector = round_robin


a1.sources.rxcache1.type = spooldir
a1.sources.rxcache1.spoolDir = /app/logs/xcache1
a1.sources.rxcache1.fileHeader = false
a1.sources.rxcache1.ignorePattern = .*log$|.*log\.[0-9]{1,2}$
a1.sources.rxcache1.deletePolicy = never
a1.sources.rxcache1.inputCharset = GB18030
a1.sources.rxcache1.decodeErrorPolicy = IGNORE
a1.sources.rxcache1.batchSize = 1000
a1.sources.rxcache1.basenameHeader = true
a1.sources.rxcache1.interceptors = i1 i2


a1.sources.rxcache1.interceptors.i1.type = static
a1.sources.rxcache1.interceptors.i1.key = service
a1.sources.rxcache1.interceptors.i1.value = xcache

a1.sources.rxcache1.interceptors.i2.type = static
a1.sources.rxcache1.interceptors.i2.key = host
a1.sources.rxcache1.interceptors.i2.value = 192.168.060.062/1
a1.sources.rxcache1.channels = clocal


# Describe the sink
#a1.sinks.kcol1.type = logger

# Use a channel which buffers events in memory
a1.channels.clocal.type = memory
a1.channels.clocal.capacity = 20000
a1.channels.clocal.transactionCapacity = 1000

a1.sinks.kcol1.type = avro
a1.sinks.kcol1.hostname = 192.168.60.62
a1.sinks.kcol1.port = 4140
a1.sinks.kcol1.batch-size= 1000
a1.sinks.kcol1.connect-timeout = 30000
a1.sinks.kcol1.request-timeout = 30000

a1.sinks.kcol2.type = avro
a1.sinks.kcol2.hostname = 192.168.60.124
a1.sinks.kcol2.port = 4140
a1.sinks.kcol2.batch-size= 1000
a1.sinks.kcol2.connect-timeout = 30000
a1.sinks.kcol2.request-timeout = 30000

# Bind the source and sink to the channel
a1.sinks.kcol1.channel = clocal
a1.sinks.kcol2.channel = clocal
